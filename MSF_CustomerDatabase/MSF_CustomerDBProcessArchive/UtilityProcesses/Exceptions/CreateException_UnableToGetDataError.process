<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exceptioninfo/v1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx2="http://www.tibco.com/pe/EngineTypes" xmlns:pfx="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1">
    <xsd:import namespace="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1" schemaLocation="/SharedResources/SchemaDefinitions/Resource/Common/CommonDefinitions/MSF/Exception_v1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/pe/EngineTypes" schemaLocation="/SharedResources/SchemaDefinitions/External/BW/EngineTypes.xsd"/>
    <pd:name>UtilityProcesses/Exceptions/CreateException_UnableToGetDataError.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ExceptionType" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="Context" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="Context2" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="Comment" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ShouldLogLocally" type="xsd:boolean" minOccurs="0"/>
                    <xsd:element name="attributes" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element ref="pfx2:ErrorReport" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>73</pd:startX>
    <pd:startY>61</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:copy-of select="$Create-Exception/root/pfx:Exception"/>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:Exception"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>450</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1349780757036</pd:targetNamespace>
    <pd:activity name="Create Exception">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>294</pd:x>
        <pd:y>61</pd:y>
        <config>
            <processName>/UtilityProcesses/Exceptions/Sub/CreateException.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="exists($Start/root/ExceptionType) and (($Start/root/ExceptionType = $_globalVariables/ns:GlobalVariables/MSF/Exceptions/ExceptionTypes/Technical) or ($Start/root/ExceptionType = $_globalVariables/ns:GlobalVariables/MSF/Exceptions/ExceptionTypes/Business))">
                        <ExceptionType>
                            <xsl:value-of select="$Start/root/ExceptionType"/>
                        </ExceptionType>
                    </xsl:when>
                    <xsl:when test="exists($Start/root/pfx2:ErrorReport)">
                        <ExceptionType>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/MSF/Exceptions/ExceptionTypes/Technical"/>
                        </ExceptionType>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionType>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/MSF/Exceptions/ExceptionTypes/Business"/>
                        </ExceptionType>
                    </xsl:otherwise>
                </xsl:choose>
                <ExceptionCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExceptionCodes/MSF/Activity-Errors/Unable-To-Get-Data-Error/Code"/>
                </ExceptionCode>
                <xsl:if test="$Start/root/Context">
                    <Context>
                        <xsl:value-of select="$Start/root/Context"/>
                    </Context>
                </xsl:if>
                <xsl:if test="$Start/root/Context2">
                    <Context2>
                        <xsl:value-of select="$Start/root/Context2"/>
                    </Context2>
                </xsl:if>
                <Severity>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/MSF/Exceptions/Severity/Fatal"/>
                </Severity>
                <Description>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExceptionCodes/MSF/Activity-Errors/Unable-To-Get-Data-Error/Description"/>
                </Description>
                <xsl:if test="$Start/root/Comment">
                    <Comment>
                        <xsl:value-of select="$Start/root/Comment"/>
                    </Comment>
                </xsl:if>
                <xsl:if test="$Start/root/ShouldLogLocally">
                    <ShouldLogLocally>
                        <xsl:value-of select="$Start/root/ShouldLogLocally"/>
                    </ShouldLogLocally>
                </xsl:if>
                <xsl:copy-of select="$Start/root/attributes"/>
                <xsl:choose>
                    <xsl:when test="exists($CreateErrorReport/root/pfx2:ErrorReport)">
                        <xsl:copy-of select="$CreateErrorReport/root/pfx2:ErrorReport"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:copy-of select="$Start/root/pfx2:ErrorReport"/>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CreateErrorReport">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>188</pd:y>
        <config>
            <processName>/UtilityProcesses/Exceptions/Sub/CreateErrorReport.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <removeParentFromStack>
                    <xsl:value-of select="true()"/>
                </removeParentFromStack>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Create Exception</pd:to>
        <pd:xpathDescription>Has ErrorReport?</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/root/pfx2:ErrorReport)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Create Exception</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>CreateErrorReport</pd:to>
        <pd:xpathDescription>No ErrorReport</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateErrorReport</pd:from>
        <pd:to>Create Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>