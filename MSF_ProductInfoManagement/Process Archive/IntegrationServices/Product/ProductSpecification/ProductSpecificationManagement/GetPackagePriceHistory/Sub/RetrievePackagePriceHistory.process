<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://three.co.uk/xsd/Interface/billing/billingpayment/billingpaymentmanagement/mcsingleview/v1" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://three.co.uk/xsd/cdm/product/productspecification/productspecificationmanagement/productspecification/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exceptioninfo/v1" xmlns:pfx2="http://three.co.uk/xsd/interface/product/productspecification/productspecificationmanagement/mcfcmanagement/v1" xmlns:ns5="http://three.co.uk/xsd/cdm/common/commondefinitions/udf/v1" xmlns:ns6="http://three.co.uk/xsd/cdm/product/productspecification/productspecificationmanagement/productpricespecification/v1" xmlns:pfx="http://three.co.uk/xsd/Interface/product/productspecification/productspecificationmanagement/rpiproductinfo/v1">
    <xsd:import namespace="http://three.co.uk/xsd/Interface/product/productspecification/productspecificationmanagement/rpiproductinfo/v1" schemaLocation="/SharedResources/SchemaDefinitions/Interface/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1" schemaLocation="/SharedResources/SchemaDefinitions/Resource/Common/CommonDefinitions/MSF/Exception_v1.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/interface/product/productspecification/productspecificationmanagement/mcfcmanagement/v1" schemaLocation="/SharedResources/SchemaDefinitions/Interface/Product/ProductSpecification/ProductSpecificationManagement/MCFCManagement_v1.xsd"/>
    <pd:name>IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/GetPackagePriceHistory/Sub/RetrievePackagePriceHistory.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:GetPackagePriceHistoryRequest"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings>
        <pfx:GetPackagePriceHistoryResponse>
            <xsl:for-each select="$RetrievePackagePricesHistory/root/ns:RetrievePackagePriceHistoryResponse/ns:priceHistory">
                <pfx:CustomerPrice>
                    <pfx:planID>
                        <xsl:value-of select="$GetProducts/root/pfx2:GetProductsResponse/pfx2:PredefinedTransformation[pfx2:From/pfx2:value=current()/ns:packageID]/pfx2:To/pfx2:value"/>
                    </pfx:planID>
                    <pfx:effectiveStartDate>
                        <xsl:value-of select="ns:effectiveStartDate"/>
                    </pfx:effectiveStartDate>
                    <pfx:effectiveEndDate>
                        <xsl:value-of select="ns:effectiveEndDate"/>
                    </pfx:effectiveEndDate>
                    <pfx:event>
                        <xsl:value-of select="ns:event"/>
                    </pfx:event>
                    <pfx:price>
                        <xsl:value-of select="ns:packagePrice"/>
                    </pfx:price>
                    <pfx:totalPercentageDiscount>
                        <xsl:value-of select="ns:totalPercentagediscounts"/>
                    </pfx:totalPercentageDiscount>
                </pfx:CustomerPrice>
            </xsl:for-each>
        </pfx:GetPackagePriceHistoryResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:GetPackagePriceHistoryResponse"/>
    <pd:endX>472</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="ns1:Exception"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442924639936/RetrievePackagePriceHistory</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>172</pd:x>
        <pd:y>204</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=Exception namespace=http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CreateUserException">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>377</pd:x>
        <pd:y>206</pd:y>
        <config>
            <processName>/UtilityProcesses/Exceptions/CreateUserException.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), &quot;ACCOUNTNUMBER&quot;)">
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidMSISDNBAN/Code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:when test="contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), &quot;MSISDN&quot;)">
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidMSISDN/Code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionCode>
                            <xsl:value-of select="$Catch/ns1:Exception/pfx3:ExceptionInfo/@exceptionCode[1]"/>
                        </ExceptionCode>
                    </xsl:otherwise>
                </xsl:choose>
                <Context>
                    <xsl:value-of select="$Catch/ns1:Exception/pfx3:ExceptionInfo/@context[1]"/>
                </Context>
                <Context2>
                    <xsl:value-of select="$Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]"/>
                </Context2>
                <Severity>
                    <xsl:value-of select="$Catch/ns1:Exception/pfx3:ExceptionInfo/@severity[1]"/>
                </Severity>
                <xsl:choose>
                    <xsl:when test="contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), &quot;ACCOUNTNUMBER&quot;)">
                        <Description>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidMSISDNBAN/Description"/>
                        </Description>
                    </xsl:when>
                    <xsl:when test="contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), &quot;MSISDN&quot;)">
                        <Description>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidMSISDNBAN/Description"/>
                        </Description>
                    </xsl:when>
                    <xsl:otherwise>
                        <Description>
                            <xsl:value-of select="$Catch/ns1:Exception/pfx3:ExceptionInfo/@description[1]"/>
                        </Description>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>206</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <xsl:copy-of select="$CreateUserException/root/ns1:Exception"/>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetProducts">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>365</pd:x>
        <pd:y>64</pd:y>
        <config>
            <processName>/IntegrationServices/Product/ServiceClient/GetProducts.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx2:GetProductsRequest>
                    <pfx2:ProductFilter>
                        <pfx2:repository>
                            <xsl:value-of select="'PRODUCT'"/>
                        </pfx2:repository>
                    </pfx2:ProductFilter>
                    <pfx2:View>
                        <pfx2:Return>
                            <pfx2:type>
                                <xsl:value-of select="'CompatibleSegment'"/>
                            </pfx2:type>
                            <pfx2:type>
                                <xsl:value-of select="'Characteristic'"/>
                            </pfx2:type>
                        </pfx2:Return>
                    </pfx2:View>
                    <xsl:for-each select="$RetrievePackagePricesHistory/root/ns:RetrievePackagePriceHistoryResponse/ns:priceHistory">
                        <pfx2:PredefinedTransformation>
                            <pfx2:Segment>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/IntendedSegments"/>
                            </pfx2:Segment>
                            <pfx2:From>
                                <pfx2:name>
                                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/BillingID"/>
                                </pfx2:name>
                                <pfx2:value>
                                    <xsl:value-of select="ns:packageID"/>
                                </pfx2:value>
                            </pfx2:From>
                            <pfx2:To>
                                <pfx2:name>
                                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/ProductID"/>
                                </pfx2:name>
                            </pfx2:To>
                        </pfx2:PredefinedTransformation>
                    </xsl:for-each>
                </pfx2:GetProductsRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Rethrow">
        <pd:type>com.tibco.pe.core.RethrowActivity</pd:type>
        <pd:resourceType>ae.activities.rethrow</pd:resourceType>
        <pd:x>166</pd:x>
        <pd:y>324</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="RetrievePackagePricesHistory">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>254</pd:x>
        <pd:y>65</pd:y>
        <config>
            <processName>/IntegrationServices/Billing/BillingPayment/BillingPaymentManagement/MC_SingleView_v1/ServiceClients/RetrievePackagePricesHistory.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns:RetrievePackagePriceHistoryRequest>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/root/pfx:GetPackagePriceHistoryRequest/pfx:accountNumber)>0">
                            <ns:accountNumber>
                                <xsl:value-of select="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:accountNumber"/>
                            </ns:accountNumber>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns:MSISDN>
                                <xsl:value-of select="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:MSISDN"/>
                            </ns:MSISDN>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:if test="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:startDate">
                        <ns:startDate>
                            <xsl:value-of select="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:startDate"/>
                        </ns:startDate>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:endDate">
                        <ns:endDate>
                            <xsl:value-of select="$Start/root/pfx:GetPackagePriceHistoryRequest/pfx:endDate"/>
                        </ns:endDate>
                    </xsl:if>
                </ns:RetrievePackagePriceHistoryRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>RetrievePackagePricesHistory</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateUserException</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>CreateUserException</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Catch/ns1:Exception/pfx3:ExceptionInfo/@exceptionCode[1]="ERR-BILL- SINGVW-0020" and (contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), "ACCOUNTNUMBER") or contains(upper-case($Catch/ns1:Exception/pfx3:ExceptionInfo/@context2[1]), "MSISDN"))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Rethrow</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RetrievePackagePricesHistory</pd:from>
        <pd:to>GetProducts</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetProducts</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>