<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://three.co.uk/xsd/cdm/[sampleschema]/v[n]" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx5="http://three.co.uk/xsd/cdm/order/orderitemdefinition/order/v1" xmlns:pfx31="http://www.tibco.com/cim/services/mastercatalogrecordworkitem/wsdl/2.0" xmlns:pfx4="http://www.tibco.com/AFF/V4.0.0/services/orchestrator/execution" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1" xmlns:pfx7="http://three.co.uk/xsd/interface/product/productspecification/productspecificationmanagement/mcfcmanagement/v1" xmlns:pfx6="http://three.co.uk/xsd/Interface/product/productspecification/productspecificationmanagement/rpiproductinfo/v1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://three.co.uk/xsd/cdm/product/productspecification/productspecificationmanagement/productallowance/v1" xmlns:ns5="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exceptioninfo/v1" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://three.co.uk/xsd/Interface/billing/billingpayment/billingpaymentmanagement/mcsingleview/v1" xmlns:ns6="http://three.co.uk/xsd/cdm/common/commondefinitions/udf/v1" xmlns:ns10="http://three.co.uk/xsd/cdm/product/productusage/productusagemanagement/productusage/v1" xmlns:pfx="http://three.co.uk/xsd/interface/managedentityabe/managemententityabe/submanagemententityabe/servicename/vn" xmlns:ns7="http://three.co.uk/xsd/cdm/product/productspecification/productspecificationmanagement/productspecification/v1" xmlns:ns11="http://three.co.uk/xsd/cdm/common/commondefinitions/discount/v1" xmlns:ns8="http://three.co.uk/xsd/cdm/product/productspecification/productspecificationmanagement/productpricespecification/v1" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/cim/services/mastercatalogrecord/wsdl/2.0" xmlns:ns3="http://www.tibco.com/AFF/V4.0.0/classes/resultstatus" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1" schemaLocation="/SharedResources/SchemaDefinitions/Resource/Common/CommonDefinitions/MSF/Exception_v1.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/interface/managedentityabe/managemententityabe/submanagemententityabe/servicename/vn" schemaLocation="/SharedResources/SchemaDefinitions/Interface/ManagedEntityABE/ManagementEntityABE/SubManagementEntityABE/ServiceName_vn.xsd"/>
    <xsd:import namespace="http://www.tibco.com/AFF/V4.0.0/services/orchestrator/execution" schemaLocation="/SharedResources/SchemaDefinitions/Resource/FOS/orchestrator/sharedResources/schemas/services/OrchestratorExecutionService.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/cdm/order/orderitemdefinition/order/v1" schemaLocation="/SharedResources/SchemaDefinitions/CDM/Order/OrderItemDefinition/Order_v1.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/Interface/product/productspecification/productspecificationmanagement/rpiproductinfo/v1" schemaLocation="/SharedResources/SchemaDefinitions/Interface/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1.xsd"/>
    <xsd:import namespace="http://three.co.uk/xsd/interface/product/productspecification/productspecificationmanagement/mcfcmanagement/v1" schemaLocation="/SharedResources/SchemaDefinitions/Interface/Product/ProductSpecification/ProductSpecificationManagement/MCFCManagement_v1.xsd"/>
    <pd:name>IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/GetProductPrices/Main/MainProcess.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx6:GetProductPricesRequest" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>32</pd:startX>
    <pd:startY>67</pd:startY>
    <pd:returnBindings>
        <root>
            <pfx6:GetProductPricesResponse>
                <xsl:for-each select="$ExistingProductAggregate/AccumulatedOutput/root">
                    <xsl:variable name="CurrentExistingProduct" select="pfx7:GetProductsResponse/ns7:productSpecification"/>
                    <xsl:for-each select="$CurrentExistingProduct&#xA;{--[$CurrentExistingProduct/ns7:productCharacteristics/ns6:UDF/ns6:name=&quot;Segment_ProductType&quot; and $CurrentExistingProduct/ns7:productCharacteristics/ns6:UDF/ns6:value=$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/IntendedSegments]--}">
                        <pfx6:ExistingProducts>
                            <ns7:productID>
                                <xsl:value-of select="ns7:productID"/>
                            </ns7:productID>
                            <xsl:if test="ns7:productName">
                                <ns7:productName>
                                    <xsl:value-of select="ns7:productName"/>
                                </ns7:productName>
                            </xsl:if>
                            <xsl:if test="ns7:productDescription">
                                <ns7:productDescription>
                                    <xsl:value-of select="ns7:productDescription"/>
                                </ns7:productDescription>
                            </xsl:if>
                            <ns7:classification>
                                <xsl:value-of select="ns7:classification"/>
                            </ns7:classification>
                            <ns7:lifecycleStatus>
                                <xsl:value-of select="ns7:lifecycleStatus"/>
                            </ns7:lifecycleStatus>
                            <xsl:copy-of select="ns7:subProductDetails"/>
                            <ns7:startDateTime>
                                <xsl:value-of select="ns7:startDateTime"/>
                            </ns7:startDateTime>
                            <xsl:if test="ns7:endDateTime">
                                <ns7:endDateTime>
                                    <xsl:value-of select="ns7:endDateTime"/>
                                </ns7:endDateTime>
                            </xsl:if>
                            <xsl:for-each select="$CurrentExistingProduct/ns8:productPriceSpecification">
                                <ns8:productPriceSpecification>
                                    <xsl:for-each select="$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:ExistingProductPrice[ns13:productID=$CurrentExistingProduct/ns7:productCharacteristics/ns6:UDF[ns6:name='BillingID']/ns6:value][1]">
                                        <ns8:price>
                                            <xsl:value-of select="ns13:price"/>
                                        </ns8:price>
                                    </xsl:for-each>
                                    <xsl:if test="ns8:priceDuration">
                                        <ns8:priceDuration>
                                            <xsl:value-of select="ns8:priceDuration"/>
                                        </ns8:priceDuration>
                                    </xsl:if>
                                    <xsl:if test="ns8:currency">
                                        <ns8:currency>
                                            <xsl:value-of select="ns8:currency"/>
                                        </ns8:currency>
                                    </xsl:if>
                                    <xsl:if test="ns8:recurringChargeFrequency">
                                        <ns8:recurringChargeFrequency>
                                            <xsl:value-of select="ns8:recurringChargeFrequency"/>
                                        </ns8:recurringChargeFrequency>
                                    </xsl:if>
                                    <xsl:copy-of select="../ns8:productPriceSpecification/ns11:discount"/>
                                    <xsl:copy-of select="../ns8:productPriceSpecification/ns8:priceSegments"/>
                                </ns8:productPriceSpecification>
                            </xsl:for-each>
                            <xsl:copy-of select="$CurrentExistingProduct/ns7:productCharacteristics"/>
                            <xsl:copy-of select="$CurrentExistingProduct/ns9:productAllowance"/>
                            <xsl:copy-of select="$CurrentExistingProduct/ns10:productUsage"/>
                        </pfx6:ExistingProducts>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:for-each select="$TargetProductAggregate/AccumulatedOutput/root">
                    <xsl:variable name="CurrentTargetProduct" select="pfx7:GetProductsResponse/ns7:productSpecification"/>
                    <xsl:for-each select="$CurrentTargetProduct&#xA;{--[$CurrentTargetProduct/ns7:productCharacteristics/ns6:UDF/ns6:name=&quot;Segment_ProductType&quot; and $CurrentTargetProduct/ns7:productCharacteristics/ns6:UDF/ns6:value=$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/IntendedSegments]--}">
                        <pfx6:TargetProducts>
                            <ns7:productID>
                                <xsl:value-of select="ns7:productID"/>
                            </ns7:productID>
                            <xsl:if test="ns7:productName">
                                <ns7:productName>
                                    <xsl:value-of select="ns7:productName"/>
                                </ns7:productName>
                            </xsl:if>
                            <xsl:if test="ns7:productDescription">
                                <ns7:productDescription>
                                    <xsl:value-of select="ns7:productDescription"/>
                                </ns7:productDescription>
                            </xsl:if>
                            <ns7:classification>
                                <xsl:value-of select="ns7:classification"/>
                            </ns7:classification>
                            <ns7:lifecycleStatus>
                                <xsl:value-of select="ns7:lifecycleStatus"/>
                            </ns7:lifecycleStatus>
                            <ns7:subProductDetails>
                                <xsl:copy-of select="ns7:subProductDetails/ns7:productSpecification"/>
                            </ns7:subProductDetails>
                            <ns7:startDateTime>
                                <xsl:value-of select="ns7:startDateTime"/>
                            </ns7:startDateTime>
                            <xsl:if test="ns7:endDateTime">
                                <ns7:endDateTime>
                                    <xsl:value-of select="ns7:endDateTime"/>
                                </ns7:endDateTime>
                            </xsl:if>
                            <xsl:for-each select="$CurrentTargetProduct/ns8:productPriceSpecification">
                                <ns8:productPriceSpecification>
                                    <xsl:for-each select="$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:TargetProductPrice[ns13:productID=$CurrentTargetProduct/ns7:productCharacteristics/ns6:UDF[ns6:name=&quot;BillingID&quot;]/ns6:value][1]">
                                        <ns8:price>
                                            <xsl:value-of select="ns13:price"/>
                                        </ns8:price>
                                    </xsl:for-each>
                                    <xsl:if test="ns8:priceDuration">
                                        <ns8:priceDuration>
                                            <xsl:value-of select="ns8:priceDuration"/>
                                        </ns8:priceDuration>
                                    </xsl:if>
                                    <xsl:if test="ns8:currency">
                                        <ns8:currency>
                                            <xsl:value-of select="ns8:currency"/>
                                        </ns8:currency>
                                    </xsl:if>
                                    <xsl:if test="ns8:recurringChargeFrequency">
                                        <ns8:recurringChargeFrequency>
                                            <xsl:value-of select="ns8:recurringChargeFrequency"/>
                                        </ns8:recurringChargeFrequency>
                                    </xsl:if>
                                    <xsl:copy-of select="../ns8:productPriceSpecification/ns11:discount"/>
                                    <xsl:copy-of select="../ns8:productPriceSpecification/ns8:priceSegments"/>
                                </ns8:productPriceSpecification>
                            </xsl:for-each>
                            <xsl:copy-of select="$CurrentTargetProduct/ns7:productCharacteristics"/>
                            <xsl:copy-of select="$CurrentTargetProduct/ns9:productAllowance"/>
                            <xsl:copy-of select="$CurrentTargetProduct/ns10:productUsage"/>
                            <xsl:copy-of select="$CurrentTargetProduct/ns7:productSegments"/>
                        </pfx6:TargetProducts>
                    </xsl:for-each>
                </xsl:for-each>
            </pfx6:GetProductPricesResponse>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx6:GetProductPricesResponse" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1228</pd:endX>
    <pd:endY>96</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="pfx2:Exception"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1355141032213</pd:targetNamespace>
    <pd:group name="ExistingProduct">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>659</pd:x>
        <pd:y>1</pd:y>
        <pd:width>321</pd:width>
        <pd:height>177</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:ExistingProductPrice</pd:over>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>ExistingProductAggregate</pd:outSlot>
            <pd:activityOutputName>Convert existProd BillingID To PeoplesoftID</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Convert existProd BillingID To PeoplesoftID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Convert existProd BillingID To PeoplesoftID</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Convert existProd BillingID To PeoplesoftID</pd:from>
            <pd:to>Log</pd:to>
            <pd:xpathDescription>MissingID</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length($Convert-existProd-BillingID-To-PeoplesoftID/root/pfx7:GetProductsResponse/ns7:productSpecification/ns7:productID)&lt;=0</pd:xpath>
        </pd:transition>
        <pd:activity name="Convert existProd BillingID To PeoplesoftID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>735</pd:x>
            <pd:y>109</pd:y>
            <config>
                <processName>/IntegrationServices/Product/ServiceClient/GetProducts.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx7:GetProductsRequest>
                        <pfx7:ProductFilter>
                            <pfx7:repository>
                                <xsl:value-of select="'PRODUCT'"/>
                            </pfx7:repository>
                        </pfx7:ProductFilter>
                        <pfx7:View>
                            <pfx7:Return>
                                <pfx7:type>
                                    <xsl:value-of select="'CompatibleSegment'"/>
                                </pfx7:type>
                                <pfx7:type>
                                    <xsl:value-of select="'Characteristic'"/>
                                </pfx7:type>
                            </pfx7:Return>
                            <pfx7:Relation>
                                <pfx7:Relationship>
                                    <pfx7:relationshipValue>
                                        <xsl:value-of select="$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:ExistingProductPrice[$i]/ns13:productID"/>
                                    </pfx7:relationshipValue>
                                    <pfx7:type>
                                        <xsl:value-of select="'Characteristic'"/>
                                    </pfx7:type>
                                </pfx7:Relationship>
                            </pfx7:Relation>
                        </pfx7:View>
                    </pfx7:GetProductsRequest>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>859</pd:x>
            <pd:y>124</pd:y>
            <config>
                <processName>/UtilityProcesses/Logging/Log.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <level>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/MSF/Logging/Levels/WARN"/>
                    </level>
                    <message>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/NoPeopleSoftID/Description,&quot; &quot;,$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:ExistingProductPrice[$i]/ns13:productID,&quot;     ORGID:&quot;,$Start/root/pfx6:GetProductPricesRequest/pfx6:orgID)"/>
                    </message>
                    <errorCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/NoPeopleSoftID/Code"/>
                    </errorCode>
                    <processName>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                    </processName>
                    <payload>
                        <xsl:copy-of select="$Convert-existProd-BillingID-To-PeoplesoftID/root/pfx7:GetProductsResponse"/>
                    </payload>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="TargetProduct">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>175</pd:y>
        <pd:width>322</pd:width>
        <pd:height>222</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:TargetProductPrice</pd:over>
            <pd:indexSlot>j</pd:indexSlot>
            <pd:outSlot>TargetProductAggregate</pd:outSlot>
            <pd:activityOutputName>Convert targetProd BillingID To PeoplesoftID</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Convert targetProd BillingID To PeoplesoftID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Convert targetProd BillingID To PeoplesoftID</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogTargetProducts</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Convert targetProd BillingID To PeoplesoftID</pd:from>
            <pd:to>LogTargetProducts</pd:to>
            <pd:xpathDescription>Missing ID</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length($Convert-targetProd-BillingID-To-PeoplesoftID/root/pfx7:GetProductsResponse/ns7:productSpecification/ns7:productID)&lt;=0</pd:xpath>
        </pd:transition>
        <pd:activity name="Convert targetProd BillingID To PeoplesoftID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>736</pd:x>
            <pd:y>308</pd:y>
            <config>
                <processName>/IntegrationServices/Product/ServiceClient/GetProducts.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx7:GetProductsRequest>
                        <pfx7:ProductFilter>
                            <pfx7:repository>
                                <xsl:value-of select="'PRODUCT'"/>
                            </pfx7:repository>
                        </pfx7:ProductFilter>
                        <pfx7:View>
                            <pfx7:Return>
                                <pfx7:type>
                                    <xsl:value-of select="'CompatibleSegment'"/>
                                </pfx7:type>
                                <pfx7:type>
                                    <xsl:value-of select="'Characteristic'"/>
                                </pfx7:type>
                            </pfx7:Return>
                            <pfx7:Relation>
                                <pfx7:Relationship>
                                    <pfx7:relationshipValue>
                                        <xsl:value-of select="$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:TargetProductPrice[$j]/ns13:productID"/>
                                    </pfx7:relationshipValue>
                                    <pfx7:type>
                                        <xsl:value-of select="'Characteristic'"/>
                                    </pfx7:type>
                                </pfx7:Relationship>
                            </pfx7:Relation>
                        </pfx7:View>
                    </pfx7:GetProductsRequest>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogTargetProducts">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>878</pd:x>
            <pd:y>330</pd:y>
            <config>
                <processName>/UtilityProcesses/Logging/Log.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <level>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/MSF/Logging/Levels/WARN"/>
                    </level>
                    <message>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/NoPeopleSoftID/Description,&quot; &quot;,$Retrieve-ProductPrices/root/ns13:RetrieveProductPricesResponse/ns13:TargetProductPrice[$j]/ns13:productID,&quot;     ORGID:&quot;,$Start/root/pfx6:GetProductPricesRequest/pfx6:orgID)"/>
                    </message>
                    <errorCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/NoPeopleSoftID/Code"/>
                    </errorCode>
                    <processName>
                        <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                    </processName>
                    <payload>
                        <xsl:copy-of select="$Convert-targetProd-BillingID-To-PeoplesoftID/root/pfx7:GetProductsResponse"/>
                    </payload>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>114</pd:x>
        <pd:y>308</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=Exception namespace=http://three.co.uk/xsd/resource/common/commondefinitions/msf/exception/v1</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Convert PeoplesoftID To BillingID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>283</pd:x>
        <pd:y>82</pd:y>
        <config>
            <processName>/IntegrationServices/Product/ServiceClient/GetProducts.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx7:GetProductsRequest>
                    <pfx7:ProductFilter>
                        <pfx7:repository>
                            <xsl:value-of select="&quot;PRODUCT&quot;"/>
                        </pfx7:repository>
                    </pfx7:ProductFilter>
                    <pfx7:View>
                        <pfx7:Return>
                            <pfx7:type>
                                <xsl:value-of select="'CompatibleSegment'"/>
                            </pfx7:type>
                            <pfx7:type>
                                <xsl:value-of select="'Characteristic'"/>
                            </pfx7:type>
                        </pfx7:Return>
                    </pfx7:View>
                    <xsl:for-each select="$Start/root/pfx6:GetProductPricesRequest/pfx6:TargetProducts/pfx6:ProductIDs/pfx6:productID">
                        <pfx7:PredefinedTransformation>
                            <pfx7:Segment>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/IntendedSegments"/>
                            </pfx7:Segment>
                            <pfx7:From>
                                <pfx7:name>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/ProductID"/>
                                </pfx7:name>
                                <pfx7:value>
                                    <xsl:value-of select="."/>
                                </pfx7:value>
                            </pfx7:From>
                            <pfx7:To>
                                <pfx7:name>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPIProductInfo_v1/BillingID"/>
                                </pfx7:name>
                            </pfx7:To>
                        </pfx7:PredefinedTransformation>
                    </xsl:for-each>
                </pfx7:GetProductsRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Create User Exception">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>325</pd:x>
        <pd:y>318</pd:y>
        <config>
            <processName>/UtilityProcesses/Exceptions/CreateUserException.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), &quot;EFFECTIVEDATE&quot;)">
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidEffectiveDate/Code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:when test="contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), &quot;PRODUCITID&quot;)">
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidProductID/Code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionCode>
                            <xsl:value-of select="$Catch/pfx2:Exception/ns5:ExceptionInfo/@exceptionCode[1]"/>
                        </ExceptionCode>
                    </xsl:otherwise>
                </xsl:choose>
                <Context>
                    <xsl:value-of select="$Catch/pfx2:Exception/ns5:ExceptionInfo/@context[1]"/>
                </Context>
                <Context2>
                    <xsl:value-of select="$Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]"/>
                </Context2>
                <Severity>
                    <xsl:value-of select="$Catch/pfx2:Exception/ns5:ExceptionInfo/@severity[1]"/>
                </Severity>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), &quot;EFFECTIVEDATE&quot;)">
                        <Description>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidEffectiveDate/Description"/>
                        </Description>
                    </xsl:when>
                    <xsl:when test="contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), &quot;PRODUCITID&quot;)">
                        <Description>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/IntegrationServices/Product/ProductSpecification/ProductSpecificationManagement/RPI_ProductInfoExceptions/InvalidProductID/Description"/>
                        </Description>
                    </xsl:when>
                    <xsl:otherwise>
                        <Description>
                            <xsl:value-of select="$Catch/pfx2:Exception/ns5:ExceptionInfo/@description[1]"/>
                        </Description>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>497</pd:x>
        <pd:y>311</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <data>
                    <xsl:copy-of select="$Create-User-Exception/root/pfx2:Exception"/>
                </data>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>108</pd:x>
        <pd:y>166</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Rethrow">
        <pd:type>com.tibco.pe.core.RethrowActivity</pd:type>
        <pd:resourceType>ae.activities.rethrow</pd:resourceType>
        <pd:x>322</pd:x>
        <pd:y>407</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Retrieve ProductPrices">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>426</pd:x>
        <pd:y>75</pd:y>
        <config>
            <processName>/IntegrationServices/Billing/BillingPayment/BillingPaymentManagement/MC_SingleView_v1/ServiceClients/RetrieveProductPrices.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns13:RetrieveProductPricesRequest>
                    <xsl:choose>
                        <xsl:when test="exists($Start/root/pfx6:GetProductPricesRequest/pfx6:accountNumber)">
                            <xsl:if test="$Start/root/pfx6:GetProductPricesRequest/pfx6:accountNumber">
                                <ns13:accountNumber>
                                    <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx6:accountNumber"/>
                                </ns13:accountNumber>
                            </xsl:if>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:if test="$Start/root/pfx6:GetProductPricesRequest/pfx6:TargetProducts/pfx6:accountNumber">
                                <ns13:accountNumber>
                                    <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx6:TargetProducts/pfx6:accountNumber"/>
                                </ns13:accountNumber>
                            </xsl:if>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns13:orgID>
                        <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx6:orgID"/>
                    </ns13:orgID>
                    <xsl:if test="exists($Start/root/pfx6:GetProductPricesRequest/pfx6:effectiveDate)">
                        <ns13:effectiveDate>
                            <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx6:effectiveDate"/>
                        </ns13:effectiveDate>
                    </xsl:if>
                    <xsl:for-each select="$Convert-PeoplesoftID-To-BillingID/root/pfx7:GetProductsResponse/pfx7:PredefinedTransformation">
                        <ns13:targetProducts>
                            <xsl:value-of select="pfx7:To/pfx7:value"/>
                        </ns13:targetProducts>
                    </xsl:for-each>
                    <ns13:packageAggregationOption>
                        <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx6:packageAggregation"/>
                    </ns13:packageAggregationOption>
                    <xsl:if test="exists($Start/root/pfx6:GetProductPricesRequest/pfx6:TargetProducts)">
                        <xsl:if test="$Start/root/pfx6:GetProductPricesRequest/pfx:TargetProducts/pfx:event">
                            <ns13:event>
                                <xsl:value-of select="$Start/root/pfx6:GetProductPricesRequest/pfx:TargetProducts/pfx:event"/>
                            </ns13:event>
                        </xsl:if>
                    </xsl:if>
                </ns13:RetrieveProductPricesRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="TraceEnd">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1122</pd:x>
        <pd:y>95</pd:y>
        <config>
            <processName>/UtilityProcesses/Tracing/TraceEnd.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <processName>
                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                </processName>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="TraceStart">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>107</pd:x>
        <pd:y>67</pd:y>
        <config>
            <processName>/UtilityProcesses/Tracing/TraceStart.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <processName>
                    <xsl:value-of select="BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId)"/>
                </processName>
                <payload>
                    <xsl:copy-of select="$Start/root/pfx6:GetProductPricesRequest"/>
                </payload>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Split">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>523</pd:x>
        <pd:y>68</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>TraceStart</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Convert PeoplesoftID To BillingID</pd:from>
        <pd:to>Retrieve ProductPrices</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TraceStart</pd:from>
        <pd:to>Convert PeoplesoftID To BillingID</pd:to>
        <pd:xpathDescription>Target Products</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/root/pfx6:GetProductPricesRequest/pfx6:TargetProducts)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>TraceEnd</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TraceStart</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Retrieve ProductPrices</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Retrieve ProductPrices</pd:from>
        <pd:to>Split</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TargetProduct</pd:from>
        <pd:to>TraceEnd</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Create User Exception</pd:to>
        <pd:xpathDescription>Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Catch/pfx2:Exception/ns5:ExceptionInfo/@exceptionCode[1]="ERR-BILL- SINGVW-0020" and (contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), "EFFECTIVEDATE") or contains(upper-case($Catch/pfx2:Exception/ns5:ExceptionInfo/@context2[1]), "PRODUCITID"))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Create User Exception</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Rethrow</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Split</pd:from>
        <pd:to>ExistingProduct</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Split</pd:from>
        <pd:to>TargetProduct</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ExistingProduct</pd:from>
        <pd:to>TraceEnd</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>