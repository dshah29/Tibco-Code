<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	 xmlns="http://www.tibco.com/AFF/V4.0.0/applications/orchestrator/aopd"
	 targetNamespace="http://www.tibco.com/AFF/V4.0.0/applications/orchestrator/aopd"
	 elementFormDefault="qualified"
	 attributeFormDefault="unqualified">
	<xs:element name="aopdRequest">
		<xs:annotation>
			<xs:documentation>Order plan development request as generated by the AOPD component. Orchestrator takes this aopdRequest and generates a plan from it.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orderRef" type="xs:string">
					<xs:annotation>
						<xs:documentation>Order reference identifier for the order.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="description" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Description for the plan.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="originator" type="xs:string">
					<xs:annotation>
						<xs:documentation>Originator of the AOPD request.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="item" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Plan items to create in the plan.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="planItemID" type="xs:string">
								<xs:annotation>
									<xs:documentation>Unique identifier for a plan item. Must be unique within the context of a single plan.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="description" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Description for the plan item.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:choice>
								<xs:sequence>
									<xs:element name="processComponentID" type="xs:string"/>
									<xs:element name="processComponentName" type="xs:string" minOccurs="0"/>
									<xs:element name="processComponentType" type="xs:string" minOccurs="0"/>
									<xs:element name="processComponentVersion" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The version of the process component to invoke when executing the plan item.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:element name="nonExecuting">
									<xs:annotation>
										<xs:documentation>Flag indicating that this plan item is non-executing so does not need to be sent to the process component.</xs:documentation>
									</xs:annotation>
									<xs:complexType/>
								</xs:element>
							</xs:choice>
							<xs:element name="action" type="xs:string">
								<xs:annotation>
									<xs:documentation>Action for the plan item.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="actionMode" type="xs:string" minOccurs="0"/>
							<xs:element name="orderLine" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>A list of order lines for this plan item.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="orderLineNumber" type="xs:string">
											<xs:annotation>
												<xs:documentation>Order line number.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="eol" type="xs:boolean">
											<xs:annotation>
												<xs:documentation>End of line flag indicating that this plan item is the last one for the specified order line number.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="dependency" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>List of dependencies for this plan item.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:choice>
											<xs:element name="milestoneID" type="xs:string">
												<xs:annotation>
													<xs:documentation>The milestone ID for an intermediate milestone in the process component that this dependency applies to.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="start">
												<xs:annotation>
													<xs:documentation>Indicates that this dependency applies to the start milestone for a plan item.</xs:documentation>
												</xs:annotation>
												<xs:complexType/>
											</xs:element>
										</xs:choice>
										<xs:element name="type" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Type of dependency.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="timeDelta" type="xs:long" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Time delta to apply to the dependency that will delay marking the dependency as ready, in msec.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:choice>
											<xs:element name="external">
												<xs:annotation>
													<xs:documentation>External dependency type.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="eventName" type="xs:string">
															<xs:annotation>
																<xs:documentation>Name of the external event that satisfies this dependency.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="eventID" type="xs:string">
															<xs:annotation>
																<xs:documentation>Unique identifier of the external event that satisfies this dependency.</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="time">
												<xs:annotation>
													<xs:documentation>Time dependency type.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="absoluteTime" type="xs:dateTime" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The date and time that this dependency will be satisfied.</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="point">
												<xs:annotation>
													<xs:documentation>Point dependency type.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="planItemID" type="xs:string">
															<xs:annotation>
																<xs:documentation>The plan item ID that uniquely identifies the plan item that must reach a milestone for this dependency to be satisfied.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="planID" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The plan ID for the plan item ID that uniquely identifies the plan item that must reach a milestone for this dependency to be satisfied. If omitted then the current plan is assumed.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="milestoneID" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The milestone ID within the plan item ID that uniquely identifies the milestone that must fire this dependency to be satisfied. If omitted then the end milestone is assumed.</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="terminal" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Indicates this item is a terminal node for the plan.</xs:documentation>
								</xs:annotation>
								<xs:complexType/>
							</xs:element>
							<xs:element name="complete" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Indicates this item has previously completed.</xs:documentation>
								</xs:annotation>
								<xs:complexType/>
							</xs:element>
							<xs:element name="udf" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>User-defined field</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="name" type="xs:string">
											<xs:annotation>
												<xs:documentation>User defined field name</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="value" type="xs:string">
											<xs:annotation>
												<xs:documentation>User defined field value</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="type" type="xs:string" minOccurs="0"/>
										<xs:element name="flavor" type="xs:string" minOccurs="0"/>
										<xs:element name="evaluationPriority" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="relations" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="parentID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="childID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="siblingID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="dependentID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>